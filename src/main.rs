mod commands;
mod settings;
mod compiler;
mod exit;
mod broadcaster;

use clap::Parser;
use commands::*;
use exit::err_exit;
use std::fs;
use std::io::ErrorKind;

fn main() {
    let args = LilacArgs::parse();
    
    match args.cmd {
        Init =>{
            init::init()
        },
        Remove =>{
            //Let's hope that the user does not have a folder named "_lilac" that was not generated by this application :P
            let result = fs::remove_dir_all("_lilac");
            match result{
                Err(e) => {
                    match e.kind(){
                        ErrorKind::NotFound => err_exit("This directory does not use lilac"),
                        ErrorKind::PermissionDenied => err_exit("Cannot delete files here: permission denied"),
                        _ => err_exit(&format!("Something unexpected has happened! {:?}", e))
                    };
                }
                _ => {}
            }
        },
        Clean =>{
            println!("\u{1b}[31;1m\noops, something went wrong :(\n\u{1b}[0m")
        },
        Build =>{
            build::build()
        },
        Run =>{
            run::run()
        }
    }
}